---
apiVersion: mongodb.com/v1
kind: MongoDBOpsManager
metadata:
  name: ops-manager
spec:
  # the number of Ops Manager instances to run. Set to value bigger
  # than 1 to get high availability and upgrades without downtime
  replicas: 1

  # the version of Ops Manager distro to use
  version: 4.4.0
  statefulSet:
    spec:
      template:
        spec:         
          containers:
            - name: mongodb-ops-manager
              resources:
                limits:
                  memory: 3G
                requests:
                  memory: 2G
  # specify the custom cluster domain of the Kubernetes cluster if it's different from the default one ('cluster.local').
  # This affects the urls generated by the Operator.
  # This field is also used for Application Database url
  # clusterDomain: mycompany.net

  # the name of the secret containing admin user credentials.
  # Either remove the secret or change the password using Ops Manager UI after the Ops Manager
  # resource is created!
  adminCredentials: adminopsmanager

  security:
    # enables TLS for Ops Manager allowing it to serve traffic over HTTPS
    tls:
      # secret containing the TLS certificate signed by known or custom CA. The secret must have a key "server.pem"
      # and value of .pem file containing private key and TLS certificate
      secretRef: 
        name: ops-manager-app-cert


  # the Ops Manager configuration. All the values must be of type string
  configuration:
    
    # set this property to allow Ops Manager to manage deployments outside of
    # Kubernetes cluster
    
    # mms.preflight.run: "false"
    mms.ignoreInitialUiSetup: "true"    
    mms.replyToEmailAddr: "test@test.com"
    mms.adminEmailAddr: "test@test.com"
    mms.mail.transport: "smtps"
    mms.mail.hostname: "mail.example.com"
    mms.mail.port: "465"
    mms.fromEmailAddr: "test@test.com"
    automation.versions.source: "hybrid"
    automation.versions.directory: "/mongodb-ops-manager/mongodb-releases/"

  # the application database backing Ops Manager. Replica Set is the only supported type
  # Application database has the SCRAM-SHA authentication mode always enabled
  applicationDatabase:
    members: 3
    persistent: true
    security:
      # enables TLS mode for application database Replica Set
      tls:
        # optional, ConfigMap containing custom CA certificate
        # Will be used by Ops Manager to establish secure connection to application database
        ca: ca-appdb
        # secret containing the TLS certificate signed by known or custom CA. The secret must have a key "server.pem"
        # and value of .pem file containing private key and TLS certificate
        secretRef: 
          name: ops-manager-db-cert
    podSpec:
      cpu: '0.25'
      memoryRequests: 250Mi
      memory: 300Mi
  externalConnectivity:
    # LoadBalancer|NodePort
    type: LoadBalancer
    # optional, corresponds to nodePort port
  backup:
    enabled: false